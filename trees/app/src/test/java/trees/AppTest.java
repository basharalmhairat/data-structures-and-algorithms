/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package trees;

import org.junit.jupiter.api.Test;

import java.util.Arrays;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {

    @Test
    public void testisEmpty() {
        BinarySearchTree<Integer> binarySearchTree = new BinarySearchTree<>();

        assertTrue(binarySearchTree.isEmpty());
    }

    @Test
    public void testOneValue() {
        BinarySearchTree<Integer> binarySearchTree = new BinarySearchTree<>();
binarySearchTree.add(1);
        assertFalse(binarySearchTree.isEmpty());
    }

    @Test
    public void testLeft() {
        BinarySearchTree<Integer> binarySearchTree = new BinarySearchTree<>();
        binarySearchTree.add(3);
        binarySearchTree.add(2);
        binarySearchTree.add(4);

        assertEquals( 3,  binarySearchTree.root.dataValue);
        assertEquals( 2,  binarySearchTree.root.leftChild.dataValue);

    }
    @Test
    public void testRight() {
        BinarySearchTree<Integer> binarySearchTree = new BinarySearchTree<>();
        binarySearchTree.add(3);
        binarySearchTree.add(2);
        binarySearchTree.add(4);

        assertEquals( 3,  binarySearchTree.root.dataValue);
        assertEquals( 4,  binarySearchTree.root.rightChild.dataValue);
    }

    @Test
    public void testCollectionInOrder() {
        BinarySearchTree<Integer> binarySearchTree = new BinarySearchTree<>();
        binarySearchTree.add(3);
        binarySearchTree.add(2);
        binarySearchTree.add(4);
        binarySearchTree.add(1);

        assertEquals( "[1, 2, 3, 4]", Arrays.toString(binarySearchTree.inOrder()));

    }

    @Test
    public void testCollectionPreOrder() {
        BinarySearchTree<Integer> binarySearchTree = new BinarySearchTree<>();
        binarySearchTree.add(3);
        binarySearchTree.add(2);
        binarySearchTree.add(4);
        binarySearchTree.add(1);

        assertEquals( "[3, 2, 1, 4]", Arrays.toString(binarySearchTree.preOrder()));

    }

    @Test
    public void testCollectionPostOrder() {
        BinarySearchTree<Integer> binarySearchTree = new BinarySearchTree<>();
        binarySearchTree.add(3);
        binarySearchTree.add(2);
        binarySearchTree.add(4);
        binarySearchTree.add(1);

        assertEquals( "[1, 2, 4, 3]", Arrays.toString(binarySearchTree.postOrder()));

    }
}
